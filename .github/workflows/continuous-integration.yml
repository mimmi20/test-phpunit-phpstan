# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name: "Continuous Integration"

on:
  - pull_request
  - push

permissions:
  contents: read

concurrency:
  group: "${{ github.event_name }}-${{ github.workflow }}-${{ github.head_ref || github.run_id }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  ci:
    name: "Run CI"

    uses: "mimmi20/mimmi20/.github/workflows/ci.yml@main"
    with:
      extensions: "ctype, dom, iconv, mbstring, simplexml, tokenizer, xml, xmlwriter"
      ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0"
      composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"
      composer-outdated-option: ""
      skip-phpstan: false
      skip-phplint: false
      skip-rector: false
      skip-phpmd: false
      skip-psalm: true
    secrets:
      envPAT: "${{ secrets.GITHUB_TOKEN }}"

  tests:
    name: "UnitTests with PHPUnit using composer installation"

    needs: "ci"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version:
          - "8.1"
          - "8.2"

        dependencies:
          - "highest"
          - "lowest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.23.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "json, opcache, dom, mbstring, intl, simplexml, tokenizer, xml, xmlwriter"
          ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0"
          coverage: "none"
          tools: "composer:v2"
        env:
          fail-fast: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          phpts: "ts"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"

      - name: "Run unit tests with phpunit/phpunit"
        run: "vendor/bin/phpunit -c phpunit.xml --no-coverage"

  tests-with-phive1:
    name: "UnitTests with PHPUnit using Phive installation (v1)"

    needs: "ci"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version:
          - "8.1"
          - "8.2"

        dependencies:
          - "highest"
          - "lowest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.23.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "json, opcache, dom, mbstring, intl, simplexml, tokenizer, xml, xmlwriter"
          ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0"
          coverage: "none"
          tools: "composer:v2, phive"
        env:
          fail-fast: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          phpts: "ts"

      - name: "Remove dependencies with composer"
        run: "composer remove --no-update --dev phpunit/phpunit"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"

      - name: "install phpunit with phive"
        run: "phive --no-progress install --trust-gpg-keys 4AA394086372C20A"

      - name: "Run unit tests with phpunit/phpunit"
        run: "tools/phpunit.phar -c phpunit.xml --no-coverage"

      - name: "Run phpstan/phpstan"
        run: "vendor/bin/phpstan analyse -c phpstan-phive1.neon --memory-limit=768M --no-progress"

  tests-with-phive2:
    name: "UnitTests with PHPUnit using Phive installation (v2)"

    needs: "ci"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version:
          - "8.1"
          - "8.2"

        dependencies:
          - "highest"
          - "lowest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.23.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "json, opcache, dom, mbstring, intl, simplexml, tokenizer, xml, xmlwriter"
          ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0"
          coverage: "none"
          tools: "composer:v2, phive"
        env:
          fail-fast: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          phpts: "ts"

      - name: "Remove dependencies with composer"
        run: "composer remove --no-update --dev phpunit/phpunit"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"

      - name: "install phpunit with phive"
        run: "phive --no-progress install --trust-gpg-keys 4AA394086372C20A"

      - name: "Run unit tests with phpunit/phpunit"
        run: "tools/phpunit.phar -c phpunit.xml --no-coverage"

      - name: "Run phpstan/phpstan"
        run: "vendor/bin/phpstan analyse -c phpstan-phive2.neon --memory-limit=768M --no-progress"

  # This is a meta job to avoid to have to constantly change the protection rules
  # whenever we touch the matrix.
  tests-status:
    name: "Unit & Integration Tests Status"
    runs-on: "ubuntu-22.04"
    needs:
      - "tests"
    if: always()
    steps:
      - name: Successful run
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0

      - name: Failing run
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
